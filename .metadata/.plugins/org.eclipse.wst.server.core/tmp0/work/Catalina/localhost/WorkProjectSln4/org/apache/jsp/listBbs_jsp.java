/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2023-02-06 07:18:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import bbs.Bbs;
import java.util.Enumeration;

public final class listBbs_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {


Bbs[] bbsList = new Bbs[10];
int count = 0; // 실제 bbs가 존재하는 크기
int last = -1; // 실제 bbs가 존재하는 마지막 순서값

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"bbsInput.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(' ');
      out.write('\r');
      out.write('\n');
 
try
	 {

      out.write("\t\r\n");
      out.write("\t\t");
      bbs.Bbs bbs = null;
      synchronized (session) {
        bbs = (bbs.Bbs) _jspx_page_context.getAttribute("bbs", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (bbs == null){
          throw new java.lang.InstantiationException("bean bbs not found within scope");
        }
      }
      out.write("\r\n");
      out.write("\t\t");
      emp.Emp emp = null;
      synchronized (session) {
        emp = (emp.Emp) _jspx_page_context.getAttribute("emp", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (emp == null){
          throw new java.lang.InstantiationException("bean emp not found within scope");
        }
      }
      out.write("\r\n");
      out.write("\t\t");
 // first step : count = 0, last = -1 -> count = 1, last = 0
	  // second step : count = 1, last = 0 -> count = 2, last = 1
		System.out.println("listBbs.jsp before action[count = "+count+"]\n" + bbsList[(last < 0)? 0:last] + "\n" + emp);
		bbsList[count++] = new Bbs(bbs);
		System.out.println("listBbs.jsp after action\n" + bbsList[++last] + "\n" + emp); //count가 증가되었기 때문에 count-1이 실제 해당 데이터를 가리킨다.
		String se_name, se_value;
		Enumeration enum_01 = session.getAttributeNames();
		while(enum_01.hasMoreElements()) {
			se_name = enum_01.nextElement().toString();
			se_value = session.getAttribute(se_name).toString();
			System.out.println("얻어온 세션 이름 : " + se_name);
			System.out.println("얻어온 세션 값 : " + se_value);
		}
		session.removeAttribute("bbs"); 
	}
	catch(Exception e)
	{ System.out.println("listBbs.jsp :: " + e.getMessage());
		/* response.sendRedirect("bbsInput.jsp"); */
	}
if (count <= 0){
	response.sendRedirect("bbsInput.jsp");
}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head><meta charset=\"UTF-8\"><title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th >번호</th><th >제목</th><th >내용</th><th >작성자</th>\r\n");
      out.write("\t\t\t</tr>\r\n");

	for (int i = 0; i < count; i++)
	{

      out.write("\t\t\t\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(i+1 );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(bbsList[i].getSubject() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(bbsList[i].getContent() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(bbsList[i].getWriter() );
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\t\r\n");

	}

      out.write("\t\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<a href=\"bbsInput.jsp\">글쓰기</a>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
